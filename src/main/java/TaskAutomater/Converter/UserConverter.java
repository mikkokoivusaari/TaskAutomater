/**
 * 
 */
// 24 Apr 2018
package TaskAutomater.Converter;

/**
 * @author mikko
 *
 */
import org.bson.types.ObjectId;

import java.time.ZonedDateTime;

import org.bson.Document;
import TaskAutomater.Model.UserModel;

import com.mongodb.BasicDBObject;
import com.mongodb.BasicDBObjectBuilder;
import com.mongodb.DBObject;
public class UserConverter {
	//Convert User Object to mongo 
	public static Document toUserModel(UserModel user) {
		ZonedDateTime entry;
		//we will use autogenerated id:s
		ObjectId id;
		//TODO add check whether the current useer exists already. Maybe verify on client side.
		ZonedDateTime now = ZonedDateTime.now();
		//Dont change entrytime if it exists
		if(user.getEntryTime() == null) {
			entry = ZonedDateTime.now();
		}else {
			entry = user.getEntryTime();
		}
		if (user.getId() == null) {
			//TODO we then want mongo to generate id
			id = null;
		}
		else {
			id = user.getId();
		}
		Document doc = new Document(
				
				"DocumentType", "User")
				.append("DateUpdated", now.toString())
					.append("EntryTime", entry.toString()
					);
		if (id !=null ) {
			doc.append("_id", id);
		}
		//doc.append("uname", user.getUname());
		//adding data document to fill in the userdata
		//Document data = new Document();
		doc.append("Data", new BasicDBObject(
				"UName", user.getUname())
				.append("First", user.getFname())
			.append("LastName", user.getLname())
			.append("Email", user.getEmail())
			
		);
		
		Integer[] role = user.getRoles();
		//helper document to complete json.
		Document doc2 = new Document();
		
		//Looping through given roles and inserting them into doc2
		for (int i=0; i<role.length;i++) {
			//System.out.println(i);
		    doc2.append("Role" + i , role[i]);
		
		}
				//using 2 docs to complete the correct layout for roles
				doc.append("Roles", new BasicDBObject(
						"UserRoles", "here")
						
						).append("Roles", doc2);
						
		return doc;
		
	} 
	
	//convert mongo User object to User in this application
	public static UserModel toUserModel(Document doc) {
		UserModel user = new UserModel();	
		user.setUname(doc.get("UName").toString());

		user.setFname(doc.get("First").toString());

		user.setLname(doc.get("LastName").toString());
		user.setEmail(doc.get("Email").toString());
		//TODO iterate roles from doc to int[]
		user.setId(doc.getObjectId("_id")); //cant be null since object is coming from mongo
		//Converting entrytime to variable we can use.
		ZonedDateTime entry = (ZonedDateTime) doc.get("EntryTime");
		user.setEntryTime(entry);
		return user;
	}
}

